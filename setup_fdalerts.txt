#!/bin/bash
set -e

APP_DIR="/opt/raspipush_ultimate"
SERVICE_NAME="fdalerts.service"
REPO_ZIP="https://github.com/maxsto73/fdalerts-app/archive/refs/heads/main.zip"
LOG_FILE="/var/log/fdalerts.log"
BACKUP_DIR="/opt/backups_fdalerts"

# -------- Helper Function (Progress Animation) --------
progress() {
  local msg=$1
  echo -n "$msg"
  for i in {1..3}; do
    echo -n "."
    sleep 0.4
  done
  echo ""
}

# -------- Main Menu --------
clear
echo "======================================="
echo " 🚀 FD Alerts Management Utility"
echo "---------------------------------------"
echo " 1) Εγκατάσταση (Clean Install)"
echo " 2) Απεγκατάσταση"
echo " 3) Ενημέρωση / Επιδιόρθωση"
echo " 4) Προβολή Logs"
echo " 5) Επανεκκίνηση Υπηρεσίας"
echo " 6) Έλεγχος Κατάστασης"
echo " 7) Backup / Restore Config"
echo " 8) Προβολή Ιστορικού Backups"
echo "======================================="
echo ""
read -p "➡️  Πληκτρολόγησε επιλογή (1–8): " choice
echo ""

# -------- 1️⃣ Εγκατάσταση --------
if [[ "$choice" == "1" ]]; then
  progress "🧹 Καθαρισμός παλαιότερης εγκατάστασης"
  sudo systemctl stop $SERVICE_NAME 2>/dev/null || true
  sudo rm -rf $APP_DIR
  sudo mkdir -p $APP_DIR

  progress "⬇️  Λήψη εφαρμογής από GitHub"
  cd /tmp
  sudo rm -f fdalerts.zip
  wget -q -O fdalerts.zip $REPO_ZIP

  progress "📦 Αποσυμπίεση αρχείων"
  sudo apt install -y unzip >/dev/null
  sudo unzip -q fdalerts.zip -d /tmp
  sudo sh -c "cp -a /tmp/fdalerts-app-main/. $APP_DIR/"

  progress "🐍 Δημιουργία Python virtual environment"
  sudo apt update -y >/dev/null
  sudo apt install -y python3 python3-venv python3-pip >/dev/null
  cd $APP_DIR
  sudo python3 -m venv venv
  sudo $APP_DIR/venv/bin/pip install --no-cache-dir flask requests >/dev/null

  progress "⚙️  Δημιουργία systemd υπηρεσίας"
  sudo bash -c "cat > /etc/systemd/system/$SERVICE_NAME" <<EOF
[Unit]
Description=FD Alerts Flask Service
After=network.target

[Service]
Environment="PYTHONHOME="
WorkingDirectory=$APP_DIR
ExecStart=/usr/bin/env $APP_DIR/venv/bin/python $APP_DIR/app.py
Restart=always
User=pi
StandardOutput=append:$LOG_FILE
StandardError=append:$LOG_FILE

[Install]
WantedBy=multi-user.target
EOF

  progress "🔁 Ενεργοποίηση υπηρεσίας"
  sudo systemctl daemon-reexec
  sudo systemctl daemon-reload
  sudo systemctl enable $SERVICE_NAME
  sudo systemctl restart $SERVICE_NAME

  sleep 3
  echo ""
  if sudo systemctl is-active --quiet $SERVICE_NAME; then
      echo "✅ Εγκατάσταση ολοκληρώθηκε επιτυχώς!"
      echo "🌐 Άνοιξε: http://$(hostname -I | awk '{print $1}'):8899"
  else
      echo "⚠️ Το service δεν ξεκίνησε σωστά. Δες τα logs:"
      sudo journalctl -u $SERVICE_NAME -n 15 --no-pager
  fi

# -------- 2️⃣ Απεγκατάσταση --------
elif [[ "$choice" == "2" ]]; then
  progress "🧹 Διακοπή υπηρεσίας"
  sudo systemctl stop $SERVICE_NAME 2>/dev/null || true
  progress "🗑️  Διαγραφή φακέλου εφαρμογής"
  sudo rm -rf $APP_DIR
  progress "❌ Αφαίρεση systemd service"
  sudo systemctl disable $SERVICE_NAME 2>/dev/null || true
  sudo rm -f /etc/systemd/system/$SERVICE_NAME
  progress "🔄 Επαναφόρτωση systemd"
  sudo systemctl daemon-reexec
  sudo systemctl daemon-reload
  echo ""
  echo "✅ Η απεγκατάσταση ολοκληρώθηκε επιτυχώς!"

# -------- 3️⃣ Ενημέρωση / Επιδιόρθωση --------
elif [[ "$choice" == "3" ]]; then
  progress "📦 Ενημέρωση FD Alerts"
  cd /tmp
  sudo rm -f fdalerts.zip
  wget -q -O fdalerts.zip $REPO_ZIP
  sudo apt install -y unzip >/dev/null
  sudo unzip -q fdalerts.zip -d /tmp
  progress "🛠️  Αντικατάσταση αρχείων (κρατά config/messages)"
  sudo systemctl stop $SERVICE_NAME 2>/dev/null || true
  sudo find /tmp/fdalerts-app-main -type f ! -name 'config.json' ! -name 'messages.json' -exec cp -f {} $APP_DIR/ \; >/dev/null 2>&1
  progress "🔁 Επανεκκίνηση υπηρεσίας"
  sudo systemctl restart $SERVICE_NAME
  sleep 2
  if sudo systemctl is-active --quiet $SERVICE_NAME; then
      echo "✅ Η ενημέρωση ολοκληρώθηκε επιτυχώς!"
      echo "🌐 Άνοιξε: http://$(hostname -I | awk '{print $1}'):8899"
  else
      echo "⚠️ Κάτι πήγε στραβά. Δες τα logs:"
      sudo journalctl -u $SERVICE_NAME -n 15 --no-pager
  fi

# -------- 4️⃣ Προβολή Logs --------
elif [[ "$choice" == "4" ]]; then
  echo "📜 Προβολή τελευταίων logs:"
  echo "---------------------------------------"
  if [ -f "$LOG_FILE" ]; then
    sudo tail -n 30 "$LOG_FILE"
  else
    echo "⚠️ Δεν υπάρχουν logs ακόμα."
  fi
  echo "---------------------------------------"
  echo ""
  read -p "➡️ Πάτα Enter για έξοδο..."

# -------- 5️⃣ Επανεκκίνηση Υπηρεσίας --------
elif [[ "$choice" == "5" ]]; then
  progress "🔄 Επανεκκίνηση της υπηρεσίας FD Alerts"
  sudo systemctl restart $SERVICE_NAME
  sleep 2
  if sudo systemctl is-active --quiet $SERVICE_NAME; then
      echo "✅ Η υπηρεσία επανεκκινήθηκε επιτυχώς!"
  else
      echo "⚠️ Το service δεν ξεκίνησε. Δες τα logs:"
      sudo journalctl -u $SERVICE_NAME -n 15 --no-pager
  fi

# -------- 6️⃣ Έλεγχος Κατάστασης --------
elif [[ "$choice" == "6" ]]; then
  echo "📊 Κατάσταση υπηρεσίας FD Alerts"
  echo "---------------------------------------"
  if sudo systemctl is-active --quiet $SERVICE_NAME; then
      echo "✅ Τρέχει κανονικά"
      echo "🕒 Uptime: $(ps -eo etime,cmd | grep app.py | grep -v grep | awk '{print $1}')"
      echo "🌐 Port: 8899"
      echo "📁 Path: $APP_DIR"
      echo "👤 Χρήστης: pi"
  else
      echo "❌ Η υπηρεσία δεν τρέχει αυτή τη στιγμή."
  fi
  echo "---------------------------------------"
  read -p "➡️ Πάτα Enter για έξοδο..."

# -------- 7️⃣ Backup / Restore Config --------
elif [[ "$choice" == "7" ]]; then
  echo "---------------------------------------"
  echo "💾 1) Δημιουργία Backup"
  echo "♻️ 2) Επαναφορά Backup"
  echo "---------------------------------------"
  read -p "➡️  Επιλογή (1 ή 2): " bchoice
  echo ""

  if [[ "$bchoice" == "1" ]]; then
      progress "📦 Δημιουργία αντιγράφου ασφαλείας"
      sudo mkdir -p $BACKUP_DIR
      ts=$(date +%Y%m%d_%H%M%S)
      sudo cp -f $APP_DIR/config.json $BACKUP_DIR/config_$ts.json 2>/dev/null || true
      sudo cp -f $APP_DIR/messages.json $BACKUP_DIR/messages_$ts.json 2>/dev/null || true
      echo "✅ Δημιουργήθηκε backup στο: $BACKUP_DIR"
      ls -lh $BACKUP_DIR | grep json
  elif [[ "$bchoice" == "2" ]]; then
      echo "📂 Διαθέσιμα backups:"
      ls -1 $BACKUP_DIR | grep json || { echo "⚠️ Δεν βρέθηκαν backups."; exit 0; }
      read -p "🔁 Πληκτρολόγησε όνομα αρχείου για επαναφορά: " fname
      if [[ -f "$BACKUP_DIR/$fname" ]]; then
          sudo cp -f "$BACKUP_DIR/$fname" "$APP_DIR/$(echo $fname | cut -d'_' -f1).json"
          echo "✅ Επαναφέρθηκε το $fname στο $APP_DIR"
          sudo systemctl restart $SERVICE_NAME
      else
          echo "❌ Το αρχείο δεν βρέθηκε."
      fi
  else
      echo "❌ Μη έγκυρη επιλογή."
  fi

# -------- 8️⃣ Προβολή Ιστορικού Backups --------
elif [[ "$choice" == "8" ]]; then
  echo "---------------------------------------"
  echo "🗂️  Ιστορικό Backup Αρχείων"
  echo "---------------------------------------"
  if [ -d "$BACKUP_DIR" ]; then
      ls -lh --sort=time $BACKUP_DIR/*.json 2>/dev/null || echo "⚠️ Δεν υπάρχουν backups ακόμα."
      total=$(ls -1 $BACKUP_DIR/*.json 2>/dev/null | wc -l)
      echo "---------------------------------------"
      echo "📦 Σύνολο Backups: $total"
      echo "📁 Φάκελος: $BACKUP_DIR"
  else
      echo "⚠️ Δεν υπάρχει φάκελος backup."
  fi
  echo "---------------------------------------"
  read -p "➡️ Πάτα Enter για έξοδο..."

# -------- Invalid Choice --------
else
  echo "❌ Μη έγκυρη επιλογή. Έξοδος."
fi
