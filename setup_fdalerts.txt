#!/bin/bash
set -e

SERVICE_NAME="fdalerts.service"
APP_DIR="/opt/raspipush_ultimate"
REPO_URL="https://github.com/maxsto73/fdalerts-app/archive/refs/heads/main.zip"
TMP_DIR="/tmp/fdalerts-app-main"

clear
echo "======================================="
echo " 🚀 FD Alerts Setup Utility"
echo "    (Installer / Uninstaller / Update)"
echo "======================================="

echo ""
echo "1) Εγκατάσταση"
echo "2) Απεγκατάσταση"
echo "3) Επανεγκατάσταση / Ενημέρωση"
echo "4) Προβολή logs"
echo ""
read -p "👉 Επιλογή (1-4): " CHOICE

case "$CHOICE" in

# ----------------------------------------------------------
# 1) ΕΓΚΑΤΑΣΤΑΣΗ
# ----------------------------------------------------------
1)
    echo ""
    echo "🔧 Ξεκινά η εγκατάσταση FD Alerts..."
    read -p "🔢 Θύρα (default 8899): " PORT
    PORT=${PORT:-8899}

    echo "📦 Κατέβασμα αρχείων..."
    sudo rm -rf $TMP_DIR
    cd /tmp
    curl -L -o fdalerts.zip "$REPO_URL" >/dev/null 2>&1
    unzip -qo fdalerts.zip

    echo "📁 Αντιγραφή στο $APP_DIR ..."
    sudo rm -rf $APP_DIR
    sudo mkdir -p $APP_DIR
    sudo cp -r $TMP_DIR/* $APP_DIR
    sudo chown -R pi:pi $APP_DIR
    cd $APP_DIR

    echo "🐍 Δημιουργία Python virtual environment..."
    sudo apt update -y >/dev/null
    sudo apt install -y python3-full python3-venv python3-pip unzip >/dev/null
    sudo rm -rf $APP_DIR/venv
    sudo python3 -m venv $APP_DIR/venv
    sudo chown -R pi:pi $APP_DIR/venv

    echo "📦 Εγκατάσταση Flask & Requests..."
    source venv/bin/activate
    pip install --upgrade pip --break-system-packages >/dev/null
    pip install flask requests --break-system-packages >/dev/null
    deactivate

    echo "⚙️  Δημιουργία systemd service..."
    sudo bash -c "cat > /etc/systemd/system/$SERVICE_NAME" <<EOF
[Unit]
Description=FD Alerts Flask Service
After=network.target

[Service]
WorkingDirectory=$APP_DIR
ExecStart=$APP_DIR/venv/bin/python $APP_DIR/app.py
Restart=always
User=pi
Environment="PORT=$PORT"

[Install]
WantedBy=multi-user.target
EOF

    echo "🔁 Εκκίνηση υπηρεσίας..."
    sudo systemctl daemon-reexec
    sudo systemctl daemon-reload
    sudo systemctl enable $SERVICE_NAME
    sudo systemctl restart $SERVICE_NAME || true
    sleep 3

    if systemctl is-active --quiet $SERVICE_NAME; then
        echo ""
        echo "✅ Εγκατάσταση ολοκληρώθηκε επιτυχώς!"
        echo "🌐 Άνοιξε: http://$(hostname -I | awk '{print $1}'):$PORT"
    else
        echo "⚠️ Το service δεν ξεκίνησε σωστά. Δες τα τελευταία logs:"
        sudo journalctl -u $SERVICE_NAME -n 10 --no-pager
    fi
    ;;

# ----------------------------------------------------------
# 2) ΑΠΕΓΚΑΤΑΣΤΑΣΗ
# ----------------------------------------------------------
2)
    echo "🧹 Απεγκαθίσταται FD Alerts..."
    sudo systemctl stop $SERVICE_NAME 2>/dev/null || true
    sudo systemctl disable $SERVICE_NAME 2>/dev/null || true
    sudo rm -f /etc/systemd/system/$SERVICE_NAME
    sudo rm -rf $APP_DIR
    sudo systemctl daemon-reload
    echo "✅ Ολοκληρώθηκε η απεγκατάσταση."
    ;;

# ----------------------------------------------------------
# 3) ΕΠΑΝΕΓΚΑΤΑΣΤΑΣΗ / UPDATE
# ----------------------------------------------------------
3)
    echo "♻️  Επανεγκατάσταση / Ενημέρωση..."
    sudo systemctl stop $SERVICE_NAME 2>/dev/null || true
    sudo rm -rf $TMP_DIR
    cd /tmp
    curl -L -o fdalerts.zip "$REPO_URL" >/dev/null 2>&1
    unzip -qo fdalerts.zip
    sudo cp -r $TMP_DIR/* $APP_DIR
    sudo chown -R pi:pi $APP_DIR
    echo "🔁 Επανεκκίνηση υπηρεσίας..."
    sudo systemctl restart $SERVICE_NAME
    sleep 2
    systemctl status $SERVICE_NAME --no-pager -n 5
    ;;

# ----------------------------------------------------------
# 4) LOGS
# ----------------------------------------------------------
4)
    echo "📜 Τελευταία logs FD Alerts:"
    sudo journalctl -u $SERVICE_NAME -n 20 --no-pager
    ;;

*)
    echo "❌ Μη έγκυρη επιλογή. Έξοδος."
    ;;
esac
